/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NAV 1
#define NUM_SYM 2
#define NUM_SYM2 3

/ {
	behaviors {
		rst: boot_reset 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "Bootloader Tap - Reset Hold";
			#binding-cells = <2>;
			tapping_term_ms = <200>;
            flavor = "balanced";
			bindings = <&reset>, <&bootloader>;
        };

        bh: layer_taps 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "Layer-Tap";
			#binding-cells = <2>;
			tapping_term_ms = <100>;
            flavor = "tap-preferred";
			bindings = <&mo>, <&kp>;
        };

        hm: homerow_mods0 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods";
			#binding-cells = <2>;
			tapping_term_ms = <200>;
            flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };
        
        hm1: homerow_mods1 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods";
			#binding-cells = <2>;
			tapping_term_ms = <200>;
            flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };

        hm2: homerow_mods2 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods 2";
			#binding-cells = <2>;
			tapping_term_ms = <200>;
            flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };

        com_col: comma_semicolon
		{
		 	compatible = "zmk,behavior-hold-tap";
	     	label = "Tap comma_hold colon";
			#binding-cells = <2>;
			tapping_term_ms = <150>;
            flavor = "balanced";
		 	bindings = <&kp>, <&kp>;
	    };
   	 };
};



/ {
    keymap 
	{
    compatible = "zmk,keymap";

    default_layer {
            bindings = <
    &kp Q 		&kp W		&kp E 		&kp R 		&kp T			&kp Y 		&kp U 		&kp I 		&kp O 		&kp P
    &hm1 LCTRL A 	&kp S 		&kp D 		&kp F 		&kp G	 		&kp H 		&kp J 		&kp K 		&kp L 		&hm1 RCTRL SEMI
    &hm2 LSHFT Z 	&kp X 		&kp C 		&kp V 		&kp B	 		&kp N 		&kp M 		&kp COMMA   	&kp DOT  	&hm2 RSHFT SLASH
    							&bh 3 TAB 	&bh 2 SPACE 		&bh 1 BSPC 	&kp LALT
            >;
        };

    nav {
            bindings = <
    &kp ESC		&none		&kp PG_UP  	&none		&none 			&kp K_VOL_UP	&kp K_VOL_DN	&kp UP 		&kp DEL		&kp BSPC
    &none 		&kp HOME	&kp PG_DN	&kp END		&none 			&kp K_MUTE 	&kp LEFT 	&kp DOWN 	&kp RIGHT 	&kp SQT	
    &none	 	&none		&none 		&none 		&none 			&none	 	&none 		&none	 	&none	 	&none	
    							&none 		&kp BSLH		&trans 		&kp RET
            >;
        };

    num_sym {
            bindings = <
    &none 		&none		&none	  	&kp PLUS	&kp MINUS		&kp KP_MULTIPLY	&kp KP_DIVIDE 	&none 		&none 		&none	
    &kp N1 		&kp N2		&kp N3		&kp N4		&kp N5 			&kp N6	 	&kp N7	 	&kp N8	 	&kp N9	 	&kp N0	
    &kp F1 		&kp F2		&kp F3		&kp F4		&kp F5 			&kp F6	 	&kp F7	 	&kp F8	 	&kp F9	 	&kp F10		
   							&none	 	&trans 			&kp ENTER 	&none
            >;
        };
	
    num_sym2 {
            bindings = <
    &bt BT_SEL_CMD 0 	&bt BT_SEL_CMD 1 &bt BT_SEL_CMD 2 &bt BT_SEL_CMD 3 &none 		&none 		&kp PG_UP 	&kp UP 		&none 		&kp BSPC
    &none 		&kp LBRC	&kp LBKT  	&kp LPAR	&none 			&none 		&kp RPAR 	&kp RBKT	&kp RBRC	&kp NON_US_HASH	
    &none 		&none		&none	  	&none		&none 			&none 		&none	 	&none 		&none 		&none	
   							&bt BT_CLR 	&trans 			&trans 		&trans
            >;
        };
    };
};
